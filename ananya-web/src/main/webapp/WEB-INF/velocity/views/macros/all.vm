#macro(vxmlHeader)
<?xml version="1.0" encoding="UTF-8"?>
<vxml version="2.1" xmlns="http://www.w3.org/2001/vxml"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.w3.org/2001/vxml http://www.w3.org/TR/voicexml21/vxml.xsd">
#end

#macro(var $name $expr)
    <var name="$name" expr="$expr"/>
#end

#macro(play $wav)
    <audio src="$wav"/>
#end

#macro(record $field $askwav $confirmwav $noinputwav $reRecordwav)
    <block>
        <prompt timeout="$bundle.register.timeout" bargein="false" cond="${field}NotRecorded">
            <audio src="$askwav"/>
        </prompt>
    </block>
    <record name="$field"
            cond="${field}NotRecorded"
            beep="$bundle.register.beep"
            maxtime="$bundle.register.max.record.time"
            finalsilence="$bundle.register.finalsilence"
            dtmfterm="$bundle.register.dtmfterm"
            type="$bundle.register.record.audio.type">

        <grammar mode="dtmf" version="1.0" root="root">
            <rule id="root" scope="public">
                <one-of>
                    <item>$bundle.register.record.stop</item>
                </one-of>
            </rule>
        </grammar>
        <noinput>
            <prompt bargein="false">
                <audio src="$noinputwav"/>
            </prompt>
        </noinput>
    </record>
    <field name="${field}Confirm" type="boolean" cond="${field}NotRecorded">
        <prompt bargein="false">
            <audio src="$confirmwav"/>
            <audio expr="$field"/>
            <audio src="$reRecordwav"/>
        </prompt>
        <grammar mode="dtmf" version="1.0" root="root">
            <rule id="root" scope="public">
                <one-of>
                    <item>$bundle.register.rerecord</item>
                </one-of>
            </rule>
        </grammar>
        <noinput>
            <assign name="${field}NotRecorded" expr="false"/>
        </noinput>
        <nomatch>
            <assign name="${field}NotRecorded" expr="false"/>
        </nomatch>
        <filled>
            <if cond="${field}Confirm">
                <goto next="#register_flw"/>
                <else/>
                <assign name="${field}NotRecorded" expr="false"/>
            </if>
        </filled>
    </field>
#end

#macro(dtmf $field $askWav $map $cond)
    <field name="$field">
        <prompt>
            <audio src="$askWav"/>
        </prompt>
        #foreach ($mapEntry in $map.entrySet())
            <option dtmf="$mapEntry.key" value="$mapEntry.value"/>
        #end
        <noinput>
            <audio src="$askWav"/>
        </noinput>
    </field>
#end

#macro(dtmfWithCondition $field $askWav $map $cond)
    <field name="$field" cond="${field}NotRecorded">
        <prompt>
            <audio src="$askWav"/>
        </prompt>
        #foreach ($mapEntry in $map.entrySet())
            <option dtmf="$mapEntry.key" value="$mapEntry.value"/>
        #end
        <noinput>
            <audio src="$askWav"/>
        </noinput>
        <nomatch>
            <audio src="$askWav"/>
        </nomatch>
        <filled>
            <assign name="${field}NotRecorded" expr="false"/>
        </filled>
    </field>
#end


#macro(repeat $prompts $flow)
    <field name="repeat">
        <prompt bargein="false">
            #foreach($prompt in $prompts)
                <audio src="$prompt"/>
            #end
        </prompt>
        <grammar mode="dtmf" version="1.0" root="root">
            <rule id="root" scope="public">
                <one-of>
                    <item>$bundle.certificate.repeat.option1</item>
                    <item>$bundle.certificate.repeat.option2</item>
                </one-of>
            </rule>
        </grammar>
        <filled>
            <if cond="repeat == '${bundle.certificate.repeat.option1}'">
                <goto next="#controller"/>
                <elseif cond="repeat == '${bundle.certificate.repeat.option2}'"/>
                <goto next="$flow"/>
            </if>
        </filled>
        <nomatch>
            <reprompt/>
        </nomatch>
    </field>
#end

#macro(vxmlFooter)
</vxml>
#end